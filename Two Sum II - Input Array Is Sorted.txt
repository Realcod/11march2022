/*
Given a 1-indexed array of integers numbers that is already sorted in non-decreasing order, find two numbers such that they add up to a specific target number. Let these two numbers be numbers[index1] and numbers[index2] where 1 <= index1 < index2 <= numbers.length.
Return the indices of the two numbers, index1 and index2, added by one as an integer array [index1, index2] of length 2.
The tests are generated such that there is exactly one solution. You may not use the same element twice.
Your solution must use only constant extra space.
*/

#include<iostream>
using namespace std;

void twosum(int arr[],int n){
	int target,i=0,j=n-1;
	cout<<"Enter the value"<<endl;
	cin>>target;
	
	while(i<j){
		int sum=arr[i]+arr[j];
		if(sum==target){
			cout<<i<<" "<<j;
			break;
		}
		else if(sum>target)
		   j--;
		else
		   i++;
	}

}

int main(){
	int n,arr[100];
	cout<<"Enter the size of the array"<<endl;
	cin>>n;
	
	cout<<"Enter the elements in the array"<<endl;
	for(int i=0;i<n;i++){
		cin>>arr[i];
	}
	
	twosum(arr,n);
}